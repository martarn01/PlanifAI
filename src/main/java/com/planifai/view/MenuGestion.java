package com.planifai.view;

import com.planifai.controller.AulaController;
import com.planifai.controller.DocumentoController;
import com.planifai.controller.EventoController;
import com.planifai.service.AulaService;
import java.awt.Color;
import java.awt.Cursor;
import com.planifai.interfaces.AulaListener;
import com.planifai.interfaces.DocumentoListener;
import com.planifai.interfaces.EventoListener;
import com.planifai.model.Aula;
import com.planifai.service.DocumentoService;
import com.planifai.service.EventoService;
import javax.swing.JOptionPane;

/**
 * Vista para gestionar las acciones relacionadas con Aulas, Eventos y
 * Documentos en la aplicación PlanifAI. Esta clase se encarga de mostrar un
 * menú contextual con opciones para realizar acciones sobre los elementos
 * seleccionados.
 *
 * @author Marta Rosado Nabais
 */
public class MenuGestion extends javax.swing.JFrame {

    private static final Color COLOR_HOVER = new Color(102, 102, 102);
    private static final Color COLOR_DEFAULT = new Color(51, 51, 51);

    private AulaController aulaController;
    private AulaListener aulaListener;

    private EventoController eventoController;
    private EventoListener eventoListener;

    private DocumentoController documentoController;
    private DocumentoListener documentoListener;

    public enum TipoElemento {
        AULA, EVENTO, DOCUMENTO
    }
    private TipoElemento tipoElemento;
    private int idElemento;

    /**
     * Constructor que inicializa el menú de gestión para el tipo de elemento
     * específico (Aula, Evento o Documento), según el parámetro recibido.
     *
     * @param tipoElemento El tipo de elemento (Aula, Evento, Documento) que se
     * gestionará.
     * @param idElemento El ID del elemento que se está gestionando.
     */
    public MenuGestion(TipoElemento tipoElemento, int idElemento) {
        initComponents();

        this.tipoElemento = tipoElemento;
        this.idElemento = idElemento;

        aulaController = new AulaController(new AulaService());
        eventoController = new EventoController(new EventoService());
        documentoController = new DocumentoController(new DocumentoService());
    }

    /**
     * Constructor por defecto. Inicializa el menú para gestionar Aulas.
     */
    public MenuGestion() {
        initComponents();
        aulaController = new AulaController(new AulaService());
    }

    /**
     * Muestra el menú en la ubicación especificada por las coordenadas (x, y) y
     * establece el ID del elemento que se está gestionando.
     *
     * @param x Coordenada X para ubicar el menú.
     * @param y Coordenada Y para ubicar el menú.
     * @param id El ID del elemento que se gestionará.
     */
    public void showMenu(int x, int y, int id) {
        setLocation(x, y);
        idElemento = id;
        setVisible(true);
    }

    /**
     * Establece el listener para las Aulas, que permitirá realizar acciones
     * sobre ellas.
     *
     * @param listener El listener de Aula para manejar eventos relacionados.
     */
    public void setAulaListener(AulaListener listener) {
        this.aulaListener = listener;
    }

    /**
     * Establece el listener para los Eventos, que permitirá realizar acciones
     * sobre ellos.
     *
     * @param listener El listener de Evento para manejar eventos relacionados.
     */
    public void setEventoListener(EventoListener listener) {
        this.eventoListener = listener;
    }

    /**
     * Establece el listener para los Documentos, que permitirá realizar
     * acciones sobre ellos.
     *
     * @param listener El listener de Documento para manejar eventos
     * relacionados.
     */
    public void setDocumentoListener(DocumentoListener listener) {
        this.documentoListener = listener;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuDesplegable = new javax.swing.JPanel();
        editarPanel = new javax.swing.JPanel();
        editarText = new javax.swing.JLabel();
        eliminarPanel = new javax.swing.JPanel();
        eliminarText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        menuDesplegable.setBackground(new java.awt.Color(51, 51, 51));

        editarPanel.setBackground(new java.awt.Color(51, 51, 51));
        editarPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editarPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editarPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editarPanelMouseExited(evt);
            }
        });

        editarText.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        editarText.setForeground(new java.awt.Color(255, 255, 255));
        editarText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editarText.setText("Editar");

        javax.swing.GroupLayout editarPanelLayout = new javax.swing.GroupLayout(editarPanel);
        editarPanel.setLayout(editarPanelLayout);
        editarPanelLayout.setHorizontalGroup(
            editarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editarPanelLayout.createSequentialGroup()
                .addComponent(editarText, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        editarPanelLayout.setVerticalGroup(
            editarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editarPanelLayout.createSequentialGroup()
                .addComponent(editarText, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        eliminarPanel.setBackground(new java.awt.Color(51, 51, 51));
        eliminarPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eliminarPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                eliminarPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                eliminarPanelMouseExited(evt);
            }
        });

        eliminarText.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        eliminarText.setForeground(new java.awt.Color(255, 255, 255));
        eliminarText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        eliminarText.setText("Eliminar");

        javax.swing.GroupLayout eliminarPanelLayout = new javax.swing.GroupLayout(eliminarPanel);
        eliminarPanel.setLayout(eliminarPanelLayout);
        eliminarPanelLayout.setHorizontalGroup(
            eliminarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(eliminarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(eliminarText, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
        );
        eliminarPanelLayout.setVerticalGroup(
            eliminarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 58, Short.MAX_VALUE)
            .addGroup(eliminarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(eliminarPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(eliminarText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout menuDesplegableLayout = new javax.swing.GroupLayout(menuDesplegable);
        menuDesplegable.setLayout(menuDesplegableLayout);
        menuDesplegableLayout.setHorizontalGroup(
            menuDesplegableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(eliminarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(editarPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        menuDesplegableLayout.setVerticalGroup(
            menuDesplegableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuDesplegableLayout.createSequentialGroup()
                .addComponent(editarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eliminarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuDesplegable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuDesplegable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editarPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editarPanelMouseEntered
        editarPanel.setBackground(COLOR_HOVER);
        editarPanel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));    }//GEN-LAST:event_editarPanelMouseEntered

    private void editarPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editarPanelMouseExited
        editarPanel.setBackground(COLOR_DEFAULT);
        editarPanel.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_editarPanelMouseExited

    private void editarPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editarPanelMouseClicked
        // Lógica para obtener los datos que se van a editar
        String nuevoNombre;
        String nuevaAsignatura;
        boolean exito;

        switch (tipoElemento) {
            case AULA:

                Aula aula = aulaController.getAulaById(idElemento); // Asegúrate de que el idElemento es correcto

                if (aula != null) {
                    // Crear y mostrar el frame de edición
                    EditAulaView editAulaView = new EditAulaView(aulaController, aula, aulaListener);
                    editAulaView.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "No se encontró el aula a editar.");
                }

                dispose();
                break;

            case EVENTO:
                // Aquí puedes implementar la lógica para editar un evento
                // Lógica para editar evento (implementación futura)
                break;

            case DOCUMENTO:
                // Aquí puedes implementar la lógica para editar un documento
                // Lógica para editar documento (implementación futura)
                break;

            default:
                JOptionPane.showMessageDialog(this, "Tipo de elemento no reconocido.");
                break;
        }
    }//GEN-LAST:event_editarPanelMouseClicked

    private void eliminarPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminarPanelMouseEntered
        eliminarPanel.setBackground(COLOR_HOVER);
        eliminarPanel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_eliminarPanelMouseEntered

    private void eliminarPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminarPanelMouseExited
        eliminarPanel.setBackground(COLOR_DEFAULT);
        eliminarPanel.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_eliminarPanelMouseExited

    private void eliminarPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminarPanelMouseClicked

        int confirm = javax.swing.JOptionPane.showConfirmDialog(this,
                "¿Estás seguro de que deseas eliminar este elemento?",
                "Confirmar eliminación",
                javax.swing.JOptionPane.YES_NO_OPTION);

        if (confirm == javax.swing.JOptionPane.YES_OPTION) {
            boolean eliminado = false;

            // Decide qué controlador usar basado en el tipo de elemento
            switch (tipoElemento) {
                case AULA:
                    eliminado = aulaController.eliminarAula(idElemento);
                    break;
                case EVENTO:
                    eliminado = eventoController.eliminarEvento(idElemento);
                    break;
                case DOCUMENTO:
                    eliminado = documentoController.eliminarDocumento(idElemento);
                    break;
                default:
                    javax.swing.JOptionPane.showMessageDialog(this, "Tipo de elemento no soportado.");
                    return;
            }

            if (eliminado) {
                javax.swing.JOptionPane.showMessageDialog(this, "Elemento eliminado exitosamente.");

                // Notifica al listener correspondiente
                switch (tipoElemento) {
                    case AULA:
                        if (aulaListener != null) {
                            aulaListener.onAulaChanged();
                        }
                        break;
                    case EVENTO:
                        if (eventoListener != null) {
                            eventoListener.onEventoDeleted();
                        }
                        break;
                    case DOCUMENTO:
                        if (documentoListener != null) {
                            documentoListener.onDocumentoDeleted();
                        }
                        break;
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "No se pudo eliminar el elemento. Inténtalo de nuevo.");
            }
        }
        this.dispose();
    }//GEN-LAST:event_eliminarPanelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuGestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuGestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuGestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuGestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuGestion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel editarPanel;
    private javax.swing.JLabel editarText;
    private javax.swing.JPanel eliminarPanel;
    private javax.swing.JLabel eliminarText;
    private javax.swing.JPanel menuDesplegable;
    // End of variables declaration//GEN-END:variables
}
