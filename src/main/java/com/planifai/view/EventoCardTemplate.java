package com.planifai.view;

import com.planifai.controller.EventoController;
import com.planifai.interfaces.EventoListener;
import com.planifai.model.Evento;
import com.planifai.service.EventoService;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.Locale;
import javax.swing.JOptionPane;

/**
 * Plantilla de tarjeta para mostrar los detalles de un evento en la interfaz
 * gráfica de la aplicación PlanifAI. Esta clase gestiona la interfaz visual de
 * un evento y permite configurar su comportamiento al interactuar con él.
 *
 * @author Marta Rosado Nabais
 */
public class EventoCardTemplate extends javax.swing.JPanel {

    private Evento evento;
    private EventoController eventoController;
    private EventoListener eventoListener;

    /**
     * Constructor de la plantilla de tarjeta de evento. Inicializa los
     * componentes de la interfaz y configura el evento.
     *
     * @param evento El evento que se va a mostrar en la tarjeta.
     */
    public EventoCardTemplate(Evento evento) {
        initComponents();
        configurarEvento(evento);

        this.evento = evento;
        eventoController = new EventoController(new EventoService());
    }

    /**
     * Establece un listener para manejar los eventos de interacción con la
     * tarjeta del evento.
     *
     * @param listener El listener que manejará los eventos de la tarjeta del
     * evento.
     */
    public void setEventoListener(EventoListener listener) {
        this.eventoListener = listener;
    }

    /**
     * Configura los datos del evento en la tarjeta.
     *
     * @param evento El objeto Evento del cual se extraerán los detalles para
     * mostrar.
     */
    private void configurarEvento(Evento evento) {
        SimpleDateFormat dayFormat = new SimpleDateFormat("dd", Locale.ENGLISH);
        SimpleDateFormat monthFormat = new SimpleDateFormat("MMM", Locale.ENGLISH);

        String day = dayFormat.format(evento.getFechaEvento());
        String month = monthFormat.format(evento.getFechaEvento()).toUpperCase();

        dayText.setText(day);
        dayText1.setText(month);
        infoText.setText(evento.getDescripcion());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        date = new javax.swing.JPanel();
        dayText = new javax.swing.JLabel();
        dayText1 = new javax.swing.JLabel();
        infoText = new javax.swing.JLabel();
        deleteButton = new javax.swing.JLabel();

        background.setBackground(new java.awt.Color(238, 238, 238));

        date.setBackground(new java.awt.Color(246, 128, 93));

        dayText.setFont(new java.awt.Font("Lato", 1, 14)); // NOI18N
        dayText.setForeground(new java.awt.Color(51, 51, 51));
        dayText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dayText.setText("30");

        dayText1.setFont(new java.awt.Font("Lato", 1, 14)); // NOI18N
        dayText1.setForeground(new java.awt.Color(51, 51, 51));
        dayText1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dayText1.setText("MAY");

        javax.swing.GroupLayout dateLayout = new javax.swing.GroupLayout(date);
        date.setLayout(dateLayout);
        dateLayout.setHorizontalGroup(
            dateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dayText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(dayText1, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
        );
        dateLayout.setVerticalGroup(
            dateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dayText, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dayText1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        infoText.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        infoText.setForeground(new java.awt.Color(153, 153, 153));
        infoText.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        infoText.setText("Texto sobre el evento en cuestión");

        deleteButton.setBackground(new java.awt.Color(204, 204, 204));
        deleteButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(153, 153, 153));
        deleteButton.setText("x");
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteButtonMouseExited(evt);
            }
        });

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(infoText, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteButton)
                .addContainerGap())
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infoText)
                    .addComponent(deleteButton)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, 56, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseClicked
        int confirmacion = JOptionPane.showConfirmDialog(
                this,
                "¿Está seguro de que desea eliminar este Evento?",
                "Confirmar eliminación",
                JOptionPane.YES_NO_OPTION
        );

        if (confirmacion == JOptionPane.YES_OPTION) {
            try {
                boolean eliminado = eventoController.eliminarEvento(evento.getIdEvento());

                if (eliminado) {
                    if (eventoListener != null) {
                        eventoListener.onEventoDeleted();
                    }

                    JOptionPane.showMessageDialog(
                            this,
                            "Evento eliminado exitosamente",
                            "Éxito",
                            JOptionPane.INFORMATION_MESSAGE
                    );
                } else {
                    JOptionPane.showMessageDialog(
                            this,
                            "No se pudo eliminar el evento",
                            "Error",
                            JOptionPane.ERROR_MESSAGE
                    );
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(
                        this,
                        "Error al eliminar el evento: " + e.getMessage(),
                        "Error",
                        JOptionPane.ERROR_MESSAGE
                );
            }
        }
    }//GEN-LAST:event_deleteButtonMouseClicked

    private void deleteButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseEntered
        Color color = new Color(102, 102, 102);
        deleteButton.setForeground(color);
    }//GEN-LAST:event_deleteButtonMouseEntered

    private void deleteButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseExited
        Color color = new Color(204, 204, 204);
        deleteButton.setForeground(color);
    }//GEN-LAST:event_deleteButtonMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JPanel date;
    private javax.swing.JLabel dayText;
    private javax.swing.JLabel dayText1;
    private javax.swing.JLabel deleteButton;
    private javax.swing.JLabel infoText;
    // End of variables declaration//GEN-END:variables
}
