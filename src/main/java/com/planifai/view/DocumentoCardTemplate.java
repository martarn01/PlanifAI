package com.planifai.view;

import com.planifai.controller.DocumentoController;
import com.planifai.interfaces.DocumentoListener;
import com.planifai.model.Documento;
import com.planifai.service.DocumentoService;
import java.awt.Color;
import java.awt.Cursor;
import javax.swing.JOptionPane;

/**
 * Clase que representa una tarjeta visual para mostrar información sobre un
 * documento. Esta clase permite mostrar un documento en una interfaz de usuario
 * y manejar eventos relacionados con él. Los documentos pueden ser asociados
 * con un listener para ejecutar acciones cuando el usuario interactúa con
 * ellos.
 *
 * @author Marta Rosado Nabais
 */
public class DocumentoCardTemplate extends javax.swing.JPanel {

    private static final Color COLOR_HOVER = new Color(240, 240, 240);
    private static final Color COLOR_CARD = new Color(255, 255, 255);
    private Documento documentoCard;
    private DocumentoController documentoController;
    private DocumentoListener documentoListener;

    /**
     * Constructor que inicializa la tarjeta del documento.
     *
     * @param documento El documento que se va a mostrar en la tarjeta.
     */
    public DocumentoCardTemplate(Documento documento) {
        initComponents();
        configurarDocumento(documento);
        documentoCard = documento;
        documentoController = new DocumentoController(new DocumentoService());
    }

    /**
     * Establece un listener para manejar los eventos del documento.
     *
     * @param listener El listener que manejará los eventos relacionados con el
     * documento.
     */
    public void setDocumentoListener(DocumentoListener listener) {
        this.documentoListener = listener;
    }

    /**
     * Configura los datos del documento en la tarjeta.
     *
     * @param documento El objeto Documento del cual se extraerán los detalles
     * para mostrar.
     */
    private void configurarDocumento(Documento documento) {
        nombreDocumento.setText(documento.getTitulo());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        documento = new javax.swing.JPanel();
        nombreDocumento = new javax.swing.JLabel();
        deleteButton = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });

        documento.setBackground(new java.awt.Color(230, 230, 144));

        javax.swing.GroupLayout documentoLayout = new javax.swing.GroupLayout(documento);
        documento.setLayout(documentoLayout);
        documentoLayout.setHorizontalGroup(
            documentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 54, Short.MAX_VALUE)
        );
        documentoLayout.setVerticalGroup(
            documentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 51, Short.MAX_VALUE)
        );

        nombreDocumento.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        nombreDocumento.setText("Nombre del documento");

        deleteButton.setBackground(new java.awt.Color(204, 204, 204));
        deleteButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(153, 153, 153));
        deleteButton.setText("x");
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteButtonMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(documento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nombreDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(deleteButton)
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(documento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        this.setBackground(COLOR_HOVER);
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_formMouseEntered

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        this.setBackground(COLOR_CARD);
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));    }//GEN-LAST:event_formMouseExited

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        GeneracionDocumentoView generacionDocumento = new GeneracionDocumentoView(documentoCard);
        generacionDocumento.setVisible(true);
        MainFrame mainframe = new MainFrame();
        mainframe.dispose();
    }//GEN-LAST:event_formMouseClicked

    private void deleteButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseEntered
        Color color = new Color(102, 102, 102);
        deleteButton.setForeground(color);
    }//GEN-LAST:event_deleteButtonMouseEntered

    private void deleteButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseExited
        Color color = new Color(204, 204, 204);
        deleteButton.setForeground(color);
    }//GEN-LAST:event_deleteButtonMouseExited

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseClicked
        int confirmacion = JOptionPane.showConfirmDialog(
                this,
                "¿Está seguro de que desea eliminar este documento?",
                "Confirmar eliminación",
                JOptionPane.YES_NO_OPTION
        );

        if (confirmacion == JOptionPane.YES_OPTION) {
            try {
                boolean eliminado = documentoController.eliminarDocumento(documentoCard.getIdDocumento());

                if (eliminado) {
                    if (documentoListener != null) {
                        documentoListener.onDocumentoDeleted();
                    }

                    JOptionPane.showMessageDialog(
                            this,
                            "Documento eliminado exitosamente",
                            "Éxito",
                            JOptionPane.INFORMATION_MESSAGE
                    );
                } else {
                    JOptionPane.showMessageDialog(
                            this,
                            "No se pudo eliminar el documento",
                            "Error",
                            JOptionPane.ERROR_MESSAGE
                    );
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(
                        this,
                        "Error al eliminar el documento: " + e.getMessage(),
                        "Error",
                        JOptionPane.ERROR_MESSAGE
                );
            }
        }
    }//GEN-LAST:event_deleteButtonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel deleteButton;
    private javax.swing.JPanel documento;
    private javax.swing.JLabel nombreDocumento;
    // End of variables declaration//GEN-END:variables
}
