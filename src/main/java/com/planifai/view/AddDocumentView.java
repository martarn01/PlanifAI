package com.planifai.view;

import com.planifai.controller.AulaController;
import com.planifai.controller.DocumentoController;
import com.planifai.controller.EventoController;
import com.planifai.model.Aula;
import com.planifai.model.Evento;
import com.planifai.service.AulaService;
import com.planifai.service.DocumentoService;
import com.planifai.service.EventoService;
import java.awt.Color;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 * Vista para agregar o editar un documento. Permite ingresar los detalles del
 * documento, asociarlo a un aula y un evento, y guardarlo en la base de datos.
 * Si el ID del documento es diferente de -1, se realiza una edici√≥n del
 * documento, en caso contrario se crea uno nuevo.
 *
 * @author Marta Rosado Nabais
 */
public class AddDocumentView extends javax.swing.JFrame {

    private String contenido;
    private String tipoDocumento;
    private String nombreDocumento;
    private int id;
    private Map<String, Integer> aulaMap = new HashMap<>();
    private Map<String, Integer> eventoMap = new HashMap<>();

    /**
     * Constructor por defecto. Inicializa los componentes de la vista sin
     * cargar datos.
     */
    public AddDocumentView() {
        initComponents();
    }

    /**
     * Constructor que recibe los detalles de un documento existente. Este
     * constructor permite cargar los datos de un documento para editarlo.
     *
     * @param contenido El contenido del documento.
     * @param tipoDocumento El tipo de documento.
     * @param nombreDocumento El nombre del documento.
     * @param id El ID del documento, si es -1 se crea uno nuevo, de lo
     * contrario se edita el documento existente.
     */
    public AddDocumentView(String contenido, String tipoDocumento, String nombreDocumento, int id) {
        initComponents();
        this.contenido = contenido;
        this.tipoDocumento = tipoDocumento;
        this.nombreDocumento = nombreDocumento;
        this.id = id;

        nombreField.setText(nombreDocumento);

        cargarAulas();
        cargarEventos();
    }

    /**
     * Carga las aulas disponibles en un JComboBox. Obtiene la lista de aulas
     * desde el controlador y las muestra en el combo box para que el usuario
     * seleccione una.
     */
    private void cargarAulas() {
        AulaController aulaController = new AulaController(new AulaService());
        List<Aula> aulas = aulaController.obtenerAulas();

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        for (Aula aula : aulas) {
            String aulaString = aula.getNombre();
            aulaMap.put(aulaString, aula.getIdAula());
            model.addElement(aulaString);
        }

        aulaComboBox.setModel(model);
    }

    /**
     * Carga los eventos disponibles en un JComboBox. Obtiene la lista de
     * eventos desde el controlador y los muestra en el combo box para que el
     * usuario seleccione uno.
     */
    private void cargarEventos() {
        EventoController eventoController = new EventoController(new EventoService());
        List<Evento> eventos = eventoController.obtenerEventos();

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        for (Evento evento : eventos) {
            String eventoString = evento.getDescripcion();
            eventoMap.put(eventoString, evento.getIdEvento());
            model.addElement(eventoString);
        }

        EventoComboBox.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background4 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        nombreText = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        nombreField = new javax.swing.JTextField();
        guardarButton = new javax.swing.JPanel();
        guardarButtonText = new javax.swing.JLabel();
        text2 = new javax.swing.JLabel();
        EventoComboBox = new javax.swing.JComboBox<>();
        text1 = new javax.swing.JLabel();
        aulaComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        background4.setBackground(new java.awt.Color(255, 255, 255));
        background4.setName("edittext"); // NOI18N

        title.setFont(new java.awt.Font("Lato Semibold", 0, 22)); // NOI18N
        title.setForeground(new java.awt.Color(51, 51, 51));
        title.setText("Guardar documento");

        nombreText.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        nombreText.setText("Nombre documento");

        jSeparator9.setBackground(new java.awt.Color(204, 204, 204));
        jSeparator9.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator9.setPreferredSize(new java.awt.Dimension(50, 3));

        nombreField.setBackground(new java.awt.Color(255, 255, 255));
        nombreField.setToolTipText("Nombre del documento");
        nombreField.setBorder(null);

        guardarButton.setBackground(new java.awt.Color(51, 51, 51));
        guardarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardarButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                guardarButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                guardarButtonMouseExited(evt);
            }
        });

        guardarButtonText.setFont(new java.awt.Font("Lato Semibold", 1, 14)); // NOI18N
        guardarButtonText.setForeground(new java.awt.Color(255, 255, 255));
        guardarButtonText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guardarButtonText.setText("Guardar");

        javax.swing.GroupLayout guardarButtonLayout = new javax.swing.GroupLayout(guardarButton);
        guardarButton.setLayout(guardarButtonLayout);
        guardarButtonLayout.setHorizontalGroup(
            guardarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, guardarButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(guardarButtonText, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addContainerGap())
        );
        guardarButtonLayout.setVerticalGroup(
            guardarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guardarButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(guardarButtonText, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        text2.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        text2.setText("Asociar con un evento");

        EventoComboBox.setToolTipText("Formato del documento");

        text1.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        text1.setText("Asociar con una clase");

        aulaComboBox.setToolTipText("Formato del documento");

        javax.swing.GroupLayout background4Layout = new javax.swing.GroupLayout(background4);
        background4.setLayout(background4Layout);
        background4Layout.setHorizontalGroup(
            background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, background4Layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addGroup(background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(text2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSeparator9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nombreField)
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nombreText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(EventoComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(aulaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(69, 69, 69))
        );
        background4Layout.setVerticalGroup(
            background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(background4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(title)
                .addGap(20, 20, 20)
                .addComponent(nombreText)
                .addGap(4, 4, 4)
                .addComponent(nombreField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(text1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(aulaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(text2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(EventoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarButtonMouseClicked

        String nombre = nombreField.getText().trim();
        String aula = aulaComboBox.getSelectedItem().toString();
        String evento = EventoComboBox.getSelectedItem().toString();

        if (nombre.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El nombre es obligatorio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Integer idAula = aulaMap.get(aula);
        Integer idEvento = eventoMap.get(evento);

        DocumentoController documentoController = new DocumentoController(new DocumentoService());

        if (id == -1) {
            // Crear  nuevo documento
            documentoController.crearDocumento(nombre, contenido, tipoDocumento, idAula, idEvento);
            JOptionPane.showMessageDialog(this, "Documento guardado con √©xito", "√âxito", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Actualizar  documento 
            documentoController.actualizarDocumento(id, nombre, contenido, tipoDocumento, idAula, idEvento);
            JOptionPane.showMessageDialog(this, "Documento editado con √©xito", "√âxito", JOptionPane.INFORMATION_MESSAGE);
        }
        this.dispose();
    }//GEN-LAST:event_guardarButtonMouseClicked

    private void guardarButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarButtonMouseEntered
        Color customColor = new Color(51, 51, 51);
        guardarButton.setBackground(Color.white);
        guardarButtonText.setForeground(customColor);
    }//GEN-LAST:event_guardarButtonMouseEntered

    private void guardarButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarButtonMouseExited
        Color customColor = new Color(51, 51, 51);
        guardarButton.setBackground(customColor);
        guardarButtonText.setForeground(Color.white);
    }//GEN-LAST:event_guardarButtonMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddDocumentView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddDocumentView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddDocumentView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddDocumentView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddDocumentView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> EventoComboBox;
    private javax.swing.JComboBox<String> aulaComboBox;
    private javax.swing.JPanel background4;
    private javax.swing.JPanel guardarButton;
    private javax.swing.JLabel guardarButtonText;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTextField nombreField;
    private javax.swing.JLabel nombreText;
    private javax.swing.JLabel text1;
    private javax.swing.JLabel text2;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
